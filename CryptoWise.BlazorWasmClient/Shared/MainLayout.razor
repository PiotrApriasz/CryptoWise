@using Microsoft.AspNetCore.Components.Authorization
@using Blazored.LocalStorage
@using CryptoWise.BlazorWasmClient.Authentication
@inherits LayoutComponentBase

@inject IJSRuntime JsRuntime;
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider 
@inject IAuthenticationService AuthenticationService


<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme"/>
<MudDialogProvider />
<MudSnackbarProvider />

<div class="page-background-class">
    <MudLayout>
        <MudAppBar Color="Color.Transparent" Elevation="0" Class="menubar">
            <MudImage Src="images/logo.png" Alt="Logo" Class="ml-16 mt-16" Height="50" Width="50"/>
            <MudText Typo="Typo.h5" Class="ml-3 mt-16" ><strong>Cryptowise</strong></MudText>
            <MudSpacer/>
            <AuthorizeView>
                <Authorized>
                    <MudText Typo="Typo.h6" Class="ml-3 mt-16 mr-3">@CreateUsername(context)</MudText>
                    <MudButton Variant="Variant.Text" Color="Color.Transparent" EndIcon="@Icons.Material.Rounded.Logout"
                               Class="mt-16 mr-10" OnClick="SignOut">Sign Out</MudButton>
                </Authorized>
                <NotAuthorized>
                    <MudButton Variant="Variant.Text" Color="Color.Transparent" EndIcon="@Icons.Material.Rounded.Login"
                               Class="mt-16 mr-10" OnClick="NavigateToSignIn">Sign In</MudButton>
                    <MudLink Href="https://github.com/PiotrApriasz?tab=repositories">
                        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" aria-label="github" Class="mr-16 mt-16"
                                       Size="Size.Large"></MudIconButton>
                    </MudLink>
                </NotAuthorized>
            </AuthorizeView>
        </MudAppBar>
        <MudMainContent>
            <ErrorBoundary>
                <ChildContent>
                    @Body
                </ChildContent>
                <ErrorContent Context="ex">
                    <Error Exception="@ex"></Error>
                </ErrorContent>
            </ErrorBoundary>
        </MudMainContent>
    </MudLayout>
</div>


@code {
    bool _drawerOpen = true;
    private bool _isDarkMode = false;
    private MudTheme _theme = new();

    [Inject] 
    private IDialogService DialogService { get; set; } = null!;
    

    protected override async Task OnInitializedAsync()
    {
        /*var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity!.IsAuthenticated)
        {
            //var name = authState.User.Claims.First(x => x.Type == "name").Value;
            //var surname = authState.User.Claims.First(x => x.Type == "surname").Value;
            var surname = authState.User.Claims.First(x => x.Type == "birthDate").Value;
            _welcomeInfo = $"{surname}'s Dashboard";
        }*/
    }

    private string CreateUsername(AuthenticationState context)
    {
        //var name = authState.User.Claims.First(x => x.Type == "name").Value;
        //var surname = authState.User.Claims.First(x => x.Type == "surname").Value;
        var surname = context.User.Claims.First(x => x.Type == "id").Value;
        return $"{surname}'s Dashboard";
    }

    private async void OnError(Exception ex)
    {
        await DialogService.ShowMessageBox("Error", ex.Message);
        StateHasChanged();
    }

    private void NavigateToSignIn()
    {
        NavigationManager.NavigateTo("SignIn");
    }

    private async Task SignOut()
    {
        await AuthenticationService.Logout();
        NavigationManager.NavigateTo("/");
    }
}

<style>
    .menubar {
         -webkit-backdrop-filter: blur(8px) !important;
          backdrop-filter: blur(8px) !important;
          height: 100px;
          
    }
    
    .mud-appbar.mud-appbar-fixed-top {
        position: static;
    }
        .page-background-class {
            background: rgb(198,200,200);
            background: linear-gradient(180deg, rgba(198,200,200,1) 0%, rgba(255,251,252,1) 100%);
            -webkit-background-size: cover;
                          -moz-background-size: cover;
                          -o-background-size: cover;
                          background-size: cover;
                          min-height: 100%;
                          top: 0;
                              bottom:0;
                              position:fixed;
                              overflow-y:scroll;
                              overflow-x:hidden;
                          width: 100%;
                          height: auto;
        }
    
</style>